{"version":3,"file":"sustainability.context-McyGfB0H.js","sources":["../../../assets/src/repository/sources/sustainability.datasource.ts","../../../assets/src/repository/sustainability.repository.ts","../../../assets/src/context/sustainability.context.ts"],"sourcesContent":["import { UmbControllerHost } from \"@umbraco-cms/backoffice/controller-api\";\nimport { UmbDataSourceResponse } from \"@umbraco-cms/backoffice/repository\";\nimport { tryExecuteAndNotify } from '@umbraco-cms/backoffice/resources';\nimport { SustainabilityService, type SustainabilityResponse } from \"@api\";\n\nexport interface SustainabilityDataSource {\n\n  checkPage(pageGuid: string): Promise<UmbDataSourceResponse<SustainabilityResponse>>;\n  getPageData(pageGuid: string): Promise<UmbDataSourceResponse<SustainabilityResponse>>;\n  savePageData(pageGuid: string, sustainabilityResponse: SustainabilityResponse): Promise<UmbDataSourceResponse<boolean>>;\n\n}\n\nexport class SustainabilityManagementDataSource implements SustainabilityDataSource {\n\n  #host: UmbControllerHost;\n\n  constructor(host: UmbControllerHost) {\n    this.#host = host;\n  }\n\n  async checkPage(pageGuid: string): Promise<UmbDataSourceResponse<SustainabilityResponse>> {\n    return await tryExecuteAndNotify(this.#host, SustainabilityService.checkPage({ pageGuid: pageGuid }));\n  }\n\n  async getPageData(pageGuid: string): Promise<UmbDataSourceResponse<SustainabilityResponse>> {\n    return await tryExecuteAndNotify(this.#host, SustainabilityService.getPageData({ pageGuid: pageGuid }));\n  }\n\n  async savePageData(pageGuid: string, sustainabilityResponse: SustainabilityResponse): Promise<UmbDataSourceResponse<boolean>> {\n    return await tryExecuteAndNotify(this.#host, SustainabilityService.savePageData({\n      pageGuid: pageGuid,\n      requestBody: sustainabilityResponse\n    }))\n  }\n\n}\n","import { UmbControllerBase } from \"@umbraco-cms/backoffice/class-api\";\nimport { UmbControllerHost } from \"@umbraco-cms/backoffice/controller-api\";\nimport { SustainabilityManagementDataSource } from \"./sources/sustainability.datasource\";\nimport { SustainabilityResponse } from \"@api\";\n\nexport class SustainabilityManagementRepository extends UmbControllerBase {\n  #sustainabilityDataSource: SustainabilityManagementDataSource;\n\n  constructor(host: UmbControllerHost) {\n    super(host);\n    this.#sustainabilityDataSource = new SustainabilityManagementDataSource(this);\n\n    console.log('repository constructor');\n  }\n\n  async checkPage(pageGuid: string) {\n    return this.#sustainabilityDataSource.checkPage(pageGuid);\n  }\n\n  async getPageData(pageGuid: string) {\n    return this.#sustainabilityDataSource.getPageData(pageGuid);\n  }\n\n  async savePageData(pageGuid: string, sustainabilityResponse: SustainabilityResponse) {\n    return this.#sustainabilityDataSource.savePageData(pageGuid, sustainabilityResponse);\n  }\n}\n","import { UmbControllerBase } from \"@umbraco-cms/backoffice/class-api\";\nimport { SustainabilityManagementRepository } from \"../repository/sustainability.repository\";\nimport { UmbContextToken } from \"@umbraco-cms/backoffice/context-api\";\n\nimport { UmbControllerHost } from \"@umbraco-cms/backoffice/controller-api\";\nimport { UmbObjectState } from \"@umbraco-cms/backoffice/observable-api\";\n\nimport { UMB_AUTH_CONTEXT } from '@umbraco-cms/backoffice/auth'\nimport { OpenAPI, SustainabilityResponse } from \"@api\";\n\nexport class SustainabilityManagementContext extends UmbControllerBase {\n  \n  #repository: SustainabilityManagementRepository;\n\n  #pageData = new UmbObjectState<SustainabilityResponse | undefined>(undefined);\n  public readonly pageData = this.#pageData.asObservable();\n\n  constructor(host: UmbControllerHost) {\n    super(host);\n\n    this.provideContext(SUSTAINABILITY_MANAGEMENT_CONTEXT_TOKEN, this);\n    this.#repository = new SustainabilityManagementRepository(this);\n    \n    this.consumeContext(UMB_AUTH_CONTEXT, (_auth) => {\n      OpenAPI.TOKEN = () => _auth.getLatestToken();\n      OpenAPI.WITH_CREDENTIALS = true;\n    });\n\n  }\n\n  async checkPage(pageGuid: string, initialLoad: boolean = true) {\n    const { data } = await this.#repository.checkPage(pageGuid);\n    if (data) {\n      this.#pageData.setValue(data);\n\n      if (!initialLoad) {\n        await this.savePageData(pageGuid, data);\n      }\n    }\n  }\n\n  async getPageData(pageGuid: string, initialLoad: boolean = true) {\n    const { data } = await this.#repository.getPageData(pageGuid);\n    if (data) {\n      this.#pageData.setValue(data);\n\n      if (!initialLoad) {\n        await this.savePageData(pageGuid, data);\n      }\n    }\n  }\n  \n  async savePageData(pageGuid: string, sustainabilityResponse: SustainabilityResponse) {\n    const saved = await this.#repository.savePageData(pageGuid, sustainabilityResponse);\n    return saved;\n  }\n  \n}\n\nexport default SustainabilityManagementContext;\n\nexport const SUSTAINABILITY_MANAGEMENT_CONTEXT_TOKEN = new UmbContextToken<SustainabilityManagementContext>(SustainabilityManagementContext.name);\n"],"names":["SustainabilityManagementDataSource","host","__privateAdd","_host","__privateSet","pageGuid","tryExecuteAndNotify","__privateGet","SustainabilityService","sustainabilityResponse","SustainabilityManagementRepository","UmbControllerBase","_sustainabilityDataSource","SustainabilityManagementContext","_repository","_pageData","UmbObjectState","SUSTAINABILITY_MANAGEMENT_CONTEXT_TOKEN","UMB_AUTH_CONTEXT","_auth","OpenAPI","initialLoad","data","UmbContextToken"],"mappings":";;;;;;;;;;;;;;;;AAaO,MAAMA,EAAuE;AAAA,EAIlF,YAAYC,GAAyB;AAFrC,IAAAC,EAAA,MAAAC,GAAA;AAGE,IAAAC,EAAA,MAAKD,GAAQF;AAAA,EACf;AAAA,EAEA,MAAM,UAAUI,GAA0E;AACjF,WAAA,MAAMC,EAAoBC,EAAA,MAAKJ,IAAOK,EAAsB,UAAU,EAAE,UAAAH,EAAoB,CAAA,CAAC;AAAA,EACtG;AAAA,EAEA,MAAM,YAAYA,GAA0E;AACnF,WAAA,MAAMC,EAAoBC,EAAA,MAAKJ,IAAOK,EAAsB,YAAY,EAAE,UAAAH,EAAoB,CAAA,CAAC;AAAA,EACxG;AAAA,EAEA,MAAM,aAAaA,GAAkBI,GAAyF;AAC5H,WAAO,MAAMH,EAAoBC,EAAA,MAAKJ,IAAOK,EAAsB,aAAa;AAAA,MAC9E,UAAAH;AAAA,MACA,aAAaI;AAAA,IACd,CAAA,CAAC;AAAA,EACJ;AAEF;AArBEN,IAAA;;ACVK,MAAMO,UAA2CC,EAAkB;AAAA,EAGxE,YAAYV,GAAyB;AACnC,UAAMA,CAAI;AAHZ,IAAAC,EAAA,MAAAU,GAAA;AAIO,IAAAR,EAAA,MAAAQ,GAA4B,IAAIZ,EAAmC,IAAI,IAE5E,QAAQ,IAAI,wBAAwB;AAAA,EACtC;AAAA,EAEA,MAAM,UAAUK,GAAkB;AACzB,WAAAE,EAAA,MAAKK,GAA0B,UAAUP,CAAQ;AAAA,EAC1D;AAAA,EAEA,MAAM,YAAYA,GAAkB;AAC3B,WAAAE,EAAA,MAAKK,GAA0B,YAAYP,CAAQ;AAAA,EAC5D;AAAA,EAEA,MAAM,aAAaA,GAAkBI,GAAgD;AACnF,WAAOF,EAAA,MAAKK,GAA0B,aAAaP,GAAUI,CAAsB;AAAA,EACrF;AACF;AApBEG,IAAA;;ACIK,MAAMC,UAAwCF,EAAkB;AAAA,EAOrE,YAAYV,GAAyB;AACnC,UAAMA,CAAI;AANZ,IAAAC,EAAA,MAAAY,GAAA;AAEA,IAAAZ,EAAA,MAAAa,GAAA;AAAY,IAAAX,EAAA,MAAAW,GAAA,IAAIC,EAAmD,MAAS,IAC5D,KAAA,WAAWT,EAAA,MAAKQ,GAAU,aAAa,GAKhD,KAAA,eAAeE,GAAyC,IAAI,GAC5Db,EAAA,MAAAU,GAAc,IAAIJ,EAAmC,IAAI,IAEzD,KAAA,eAAeQ,GAAkB,CAACC,MAAU;AACvC,MAAAC,EAAA,QAAQ,MAAMD,EAAM,eAAe,GAC3CC,EAAQ,mBAAmB;AAAA,IAAA,CAC5B;AAAA,EAEH;AAAA,EAEA,MAAM,UAAUf,GAAkBgB,IAAuB,IAAM;AAC7D,UAAM,EAAE,MAAAC,EAAK,IAAI,MAAMf,EAAA,MAAKO,GAAY,UAAUT,CAAQ;AAC1D,IAAIiB,MACGf,EAAA,MAAAQ,GAAU,SAASO,CAAI,GAEvBD,KACG,MAAA,KAAK,aAAahB,GAAUiB,CAAI;AAAA,EAG5C;AAAA,EAEA,MAAM,YAAYjB,GAAkBgB,IAAuB,IAAM;AAC/D,UAAM,EAAE,MAAAC,EAAK,IAAI,MAAMf,EAAA,MAAKO,GAAY,YAAYT,CAAQ;AAC5D,IAAIiB,MACGf,EAAA,MAAAQ,GAAU,SAASO,CAAI,GAEvBD,KACG,MAAA,KAAK,aAAahB,GAAUiB,CAAI;AAAA,EAG5C;AAAA,EAEA,MAAM,aAAajB,GAAkBI,GAAgD;AAE5E,WADO,MAAMF,EAAA,MAAKO,GAAY,aAAaT,GAAUI,CAAsB;AAAA,EAEpF;AAEF;AA7CEK,IAAA,eAEAC,IAAA;AA+CK,MAAME,IAA0C,IAAIM,EAAiDV,EAAgC,IAAI;"}