{"version":3,"file":"index-Clx-kk79.js","sources":["../../../assets/src/documents/manifest.ts","../../../assets/src/section/overview/types.ts","../../../assets/src/section/overview/menu-item/manifests.ts","../../../assets/src/section/overview/workspace/manifests.ts","../../../assets/src/section/overview/manifests.ts","../../../assets/src/section/stats/types.ts","../../../assets/src/section/stats/menu-item/manifests.ts","../../../assets/src/section/stats/workspace/manifests.ts","../../../assets/src/section/stats/manifests.ts","../../../assets/src/section/manifests.ts","../../../assets/src/api/core/ApiError.ts","../../../assets/src/api/core/CancelablePromise.ts","../../../assets/src/api/core/OpenAPI.ts","../../../assets/src/api/core/request.ts","../../../assets/src/api/services.gen.ts","../../../assets/src/repository/sources/sustainability.source.ts","../../../assets/src/repository/sustainability.repository.ts","../../../assets/src/context/sustainability.context.ts","../../../assets/src/components/carbon-rating.element.ts","../../../assets/src/index.ts"],"sourcesContent":["import { ManifestWorkspaceView } from \"@umbraco-cms/backoffice/extension-registry\";\r\n\r\nconst workspaceView: ManifestWorkspaceView = {\r\n  type: 'workspaceView',\r\n  alias: 'Umbraco.Community.Sustainability.Workspace',\r\n  name: 'Sustainability Workspace',\r\n  js: () => import('./views/sustainability-workspace-view.js'),\r\n  weight: 10,\r\n  meta: {\r\n    icon: 'icon-eco',\r\n    pathname: 'sustainability',\r\n    label: 'Sustainability'\r\n  },\r\n  conditions: [\r\n    {\r\n      alias: 'Umb.Condition.WorkspaceAlias',\r\n      match: 'Umb.Workspace.Document'\r\n    },\r\n  ]\r\n}\r\n\r\nexport const manifests = [workspaceView];\r\n","export const SUSTAINABILITY_OVERVIEW_ENTITY_TYPE = \"overview\";\r\nexport const SUSTAINABILITY_OVERVIEW_ROOT_ENTITY_TYPE = \"overview-root\";\r\n\r\nexport type SustainabilityOverviewEntityType = typeof SUSTAINABILITY_OVERVIEW_ENTITY_TYPE;\r\nexport type SustainabilityOverviewRootEntityType = typeof SUSTAINABILITY_OVERVIEW_ROOT_ENTITY_TYPE;","import type { ManifestMenuItem } from '@umbraco-cms/backoffice/extension-registry';\r\nimport { SUSTAINABILITY_OVERVIEW_ROOT_ENTITY_TYPE } from '../types';\r\n\r\nconst menuItem: ManifestMenuItem = {\r\n  type: 'menuItem',\r\n  alias: 'Sustainability.MenuItem.Overview',\r\n  name: 'Overview Menu Item',\r\n  weight: 2000,\r\n  meta: {\r\n    label: 'Overview',\r\n    icon: 'icon-eco',\r\n    entityType: SUSTAINABILITY_OVERVIEW_ROOT_ENTITY_TYPE,\r\n    menus: [\"Umb.Menu.Sustainability\"],\r\n  }\r\n};\r\n\r\nexport const manifests = [menuItem];","import type { ManifestWorkspace, ManifestWorkspaceContext } from \"@umbraco-cms/backoffice/extension-registry\";\r\nimport { SUSTAINABILITY_OVERVIEW_ROOT_ENTITY_TYPE } from \"../types\";\r\n\r\nconst workspaceAlias = \"Sustainability.Workspace.Overview\";\r\nconst contextAlias = \"Sustainability.Workspace.Context\";\r\n\r\nconst workspace: ManifestWorkspace = {\r\n  type: \"workspace\",\r\n  alias: workspaceAlias,\r\n  name: \"Overview Root Workspace\",\r\n  js: () => import('./overview-workspace.element'),\r\n  meta: {\r\n    entityType: SUSTAINABILITY_OVERVIEW_ROOT_ENTITY_TYPE\r\n  },\r\n};\r\n\r\nconst context: ManifestWorkspaceContext = {\r\n  type: 'workspaceContext',\r\n  alias: contextAlias,\r\n  name: 'Stats Workspace Context',\r\n  js: () => import('../../../context/sustainability.context'),\r\n};\r\n\r\nexport const manifests = [\r\n  context,\r\n  workspace\r\n];\r\n","import { manifests as menuItems } from './menu-item/manifests';\r\nimport { manifests as workspaceManifests } from './workspace/manifests';\r\n\r\nexport const manifests = [\r\n  ...workspaceManifests,\r\n  ...menuItems\r\n]","export const SUSTAINABILITY_STATS_ROOT_ENTITY_TYPE = \"stats-root\";\r\nexport const SUSTAINABILITY_STATS_ENTITY_TYPE = \"stats\";\r\n\r\nexport type SustainabilityStatsEntityType = typeof SUSTAINABILITY_STATS_ENTITY_TYPE;\r\nexport type SustainabilityStatsRootEntityType = typeof SUSTAINABILITY_STATS_ROOT_ENTITY_TYPE;","import type { ManifestMenuItem } from '@umbraco-cms/backoffice/extension-registry';\r\nimport { SUSTAINABILITY_STATS_ROOT_ENTITY_TYPE } from '../types';\r\n\r\nconst menuItem: ManifestMenuItem = {\r\n  type: 'menuItem',\r\n  alias: 'Sustainability.MenuItem.Stats',\r\n  name: 'Stats Menu Item',\r\n  weight: 1000,\r\n  meta: {\r\n    label: 'Stats',\r\n    icon: 'icon-chart',\r\n    entityType: SUSTAINABILITY_STATS_ROOT_ENTITY_TYPE,\r\n    menus: [\"Umb.Menu.Sustainability\"],\r\n  }\r\n};\r\n\r\nexport const manifests = [menuItem];","import type { ManifestWorkspace } from \"@umbraco-cms/backoffice/extension-registry\";\r\nimport { SUSTAINABILITY_STATS_ROOT_ENTITY_TYPE } from \"../types\";\r\n\r\nconst workspaceAlias = \"Sustainability.Workspace.Stats\";\r\n\r\nconst workspace: ManifestWorkspace = {\r\n  type: \"workspace\",\r\n  alias: workspaceAlias,\r\n  name: \"Stats Root Workspace\",\r\n  js: () => import('./stats-workspace.element'),\r\n  meta: {\r\n    entityType: SUSTAINABILITY_STATS_ROOT_ENTITY_TYPE\r\n  },\r\n};\r\n\r\nexport const manifests = [\r\n  workspace\r\n];\r\n","import { manifests as menuItems } from './menu-item/manifests';\r\nimport { manifests as workspaceManifests } from './workspace/manifests';\r\n\r\nexport const manifests = [\r\n  ...workspaceManifests,\r\n  ...menuItems\r\n]","import { ManifestMenu, ManifestSection, ManifestSectionSidebarApp, ManifestSectionView } from \"@umbraco-cms/backoffice/extension-registry\";\r\n\r\nimport { manifests as overviewManifests } from './overview/manifests';\r\nimport { manifests as statsManifests } from './stats/manifests';\r\n\r\nconst sectionAlias = \"Umb.Section.Sustainability\";\r\nconst menuAlias = \"Umb.Menu.Sustainability\";\r\n\r\nconst section: ManifestSection = {\r\n  type: \"section\",\r\n  alias: sectionAlias,\r\n  name: \"Sustainability Section\",\r\n  weight: 0,\r\n  meta: {\r\n    label: \"Sustainability\",\r\n    pathname: \"sustainability\",\r\n  },\r\n  conditions: [\r\n    {\r\n      alias: 'Umb.Condition.SectionUserPermission',\r\n      match: sectionAlias\r\n    }\r\n  ]\r\n};\r\n\r\nconst sectionView: ManifestSectionView = {\r\n  type: 'sectionView',\r\n  alias: \"Umb.SectionView.Sustainability\",\r\n  name: \"Sustainability Section View\",\r\n  element: () => import('./sustainability-section-view.element'),\r\n  meta: {\r\n    label: 'Sustainability',\r\n    icon: 'icon-eco',\r\n    pathname: 'view'\r\n  },\r\n  conditions: [\r\n    {\r\n      alias: \"Umb.Condition.SectionAlias\",\r\n      match: sectionAlias,\r\n    },\r\n  ]\r\n}\r\n\r\nconst menu: ManifestMenu = {\r\n  type: \"menu\",\r\n  alias: menuAlias,\r\n  name: \"Sustainability Menu\",\r\n  meta: {\r\n    label: \"Sustainability\",\r\n  },\r\n};\r\n\r\nconst menuSectionSidebarApp: ManifestSectionSidebarApp = {\r\n  type: \"sectionSidebarApp\",\r\n  kind: \"menu\",\r\n  alias: \"Umb.SectionSidebar.Sustainability\",\r\n  name: \"Sustainability Section Sidebar Menu\",\r\n  weight: 200,\r\n  meta: {\r\n    label: \"Sustainability\",\r\n    menu: menuAlias,\r\n  },\r\n  conditions: [\r\n    {\r\n      alias: \"Umb.Condition.SectionAlias\",\r\n      match: sectionAlias,\r\n    },\r\n  ],\r\n};\r\n\r\nexport const manifests = [\r\n  section,\r\n  sectionView,\r\n  menu,\r\n  menuSectionSidebarApp,\r\n  ...overviewManifests,\r\n  ...statsManifests\r\n]\r\n","import type { ApiRequestOptions } from './ApiRequestOptions';\r\nimport type { ApiResult } from './ApiResult';\r\n\r\nexport class ApiError extends Error {\r\n\tpublic readonly url: string;\r\n\tpublic readonly status: number;\r\n\tpublic readonly statusText: string;\r\n\tpublic readonly body: unknown;\r\n\tpublic readonly request: ApiRequestOptions;\r\n\r\n\tconstructor(request: ApiRequestOptions, response: ApiResult, message: string) {\r\n\t\tsuper(message);\r\n\r\n\t\tthis.name = 'ApiError';\r\n\t\tthis.url = response.url;\r\n\t\tthis.status = response.status;\r\n\t\tthis.statusText = response.statusText;\r\n\t\tthis.body = response.body;\r\n\t\tthis.request = request;\r\n\t}\r\n}","export class CancelError extends Error {\r\n\tconstructor(message: string) {\r\n\t\tsuper(message);\r\n\t\tthis.name = 'CancelError';\r\n\t}\r\n\r\n\tpublic get isCancelled(): boolean {\r\n\t\treturn true;\r\n\t}\r\n}\r\n\r\nexport interface OnCancel {\r\n\treadonly isResolved: boolean;\r\n\treadonly isRejected: boolean;\r\n\treadonly isCancelled: boolean;\r\n\r\n\t(cancelHandler: () => void): void;\r\n}\r\n\r\nexport class CancelablePromise<T> implements Promise<T> {\r\n\tprivate _isResolved: boolean;\r\n\tprivate _isRejected: boolean;\r\n\tprivate _isCancelled: boolean;\r\n\treadonly cancelHandlers: (() => void)[];\r\n\treadonly promise: Promise<T>;\r\n\tprivate _resolve?: (value: T | PromiseLike<T>) => void;\r\n\tprivate _reject?: (reason?: unknown) => void;\r\n\r\n\tconstructor(\r\n\t\texecutor: (\r\n\t\t\tresolve: (value: T | PromiseLike<T>) => void,\r\n\t\t\treject: (reason?: unknown) => void,\r\n\t\t\tonCancel: OnCancel\r\n\t\t) => void\r\n\t) {\r\n\t\tthis._isResolved = false;\r\n\t\tthis._isRejected = false;\r\n\t\tthis._isCancelled = false;\r\n\t\tthis.cancelHandlers = [];\r\n\t\tthis.promise = new Promise<T>((resolve, reject) => {\r\n\t\t\tthis._resolve = resolve;\r\n\t\t\tthis._reject = reject;\r\n\r\n\t\t\tconst onResolve = (value: T | PromiseLike<T>): void => {\r\n\t\t\t\tif (this._isResolved || this._isRejected || this._isCancelled) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tthis._isResolved = true;\r\n\t\t\t\tif (this._resolve) this._resolve(value);\r\n\t\t\t};\r\n\r\n\t\t\tconst onReject = (reason?: unknown): void => {\r\n\t\t\t\tif (this._isResolved || this._isRejected || this._isCancelled) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tthis._isRejected = true;\r\n\t\t\t\tif (this._reject) this._reject(reason);\r\n\t\t\t};\r\n\r\n\t\t\tconst onCancel = (cancelHandler: () => void): void => {\r\n\t\t\t\tif (this._isResolved || this._isRejected || this._isCancelled) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tthis.cancelHandlers.push(cancelHandler);\r\n\t\t\t};\r\n\r\n\t\t\tObject.defineProperty(onCancel, 'isResolved', {\r\n\t\t\t\tget: (): boolean => this._isResolved,\r\n\t\t\t});\r\n\r\n\t\t\tObject.defineProperty(onCancel, 'isRejected', {\r\n\t\t\t\tget: (): boolean => this._isRejected,\r\n\t\t\t});\r\n\r\n\t\t\tObject.defineProperty(onCancel, 'isCancelled', {\r\n\t\t\t\tget: (): boolean => this._isCancelled,\r\n\t\t\t});\r\n\r\n\t\t\treturn executor(onResolve, onReject, onCancel as OnCancel);\r\n\t\t});\r\n\t}\r\n\r\n\tget [Symbol.toStringTag]() {\r\n\t\treturn \"Cancellable Promise\";\r\n\t}\r\n\r\n\tpublic then<TResult1 = T, TResult2 = never>(\r\n\t\tonFulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | null,\r\n\t\tonRejected?: ((reason: unknown) => TResult2 | PromiseLike<TResult2>) | null\r\n\t): Promise<TResult1 | TResult2> {\r\n\t\treturn this.promise.then(onFulfilled, onRejected);\r\n\t}\r\n\r\n\tpublic catch<TResult = never>(\r\n\t\tonRejected?: ((reason: unknown) => TResult | PromiseLike<TResult>) | null\r\n\t): Promise<T | TResult> {\r\n\t\treturn this.promise.catch(onRejected);\r\n\t}\r\n\r\n\tpublic finally(onFinally?: (() => void) | null): Promise<T> {\r\n\t\treturn this.promise.finally(onFinally);\r\n\t}\r\n\r\n\tpublic cancel(): void {\r\n\t\tif (this._isResolved || this._isRejected || this._isCancelled) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._isCancelled = true;\r\n\t\tif (this.cancelHandlers.length) {\r\n\t\t\ttry {\r\n\t\t\t\tfor (const cancelHandler of this.cancelHandlers) {\r\n\t\t\t\t\tcancelHandler();\r\n\t\t\t\t}\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.warn('Cancellation threw an error', error);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.cancelHandlers.length = 0;\r\n\t\tif (this._reject) this._reject(new CancelError('Request aborted'));\r\n\t}\r\n\r\n\tpublic get isCancelled(): boolean {\r\n\t\treturn this._isCancelled;\r\n\t}\r\n}","import type { ApiRequestOptions } from './ApiRequestOptions';\r\n\r\ntype Headers = Record<string, string>;\r\ntype Middleware<T> = (value: T) => T | Promise<T>;\r\ntype Resolver<T> = (options: ApiRequestOptions) => Promise<T>;\r\n\r\nexport class Interceptors<T> {\r\n  _fns: Middleware<T>[];\r\n\r\n  constructor() {\r\n    this._fns = [];\r\n  }\r\n\r\n  eject(fn: Middleware<T>) {\r\n    const index = this._fns.indexOf(fn);\r\n    if (index !== -1) {\r\n      this._fns = [\r\n        ...this._fns.slice(0, index),\r\n        ...this._fns.slice(index + 1),\r\n      ];\r\n    }\r\n  }\r\n\r\n  use(fn: Middleware<T>) {\r\n    this._fns = [...this._fns, fn];\r\n  }\r\n}\r\n\r\nexport type OpenAPIConfig = {\r\n\tBASE: string;\r\n\tCREDENTIALS: 'include' | 'omit' | 'same-origin';\r\n\tENCODE_PATH?: ((path: string) => string) | undefined;\r\n\tHEADERS?: Headers | Resolver<Headers> | undefined;\r\n\tPASSWORD?: string | Resolver<string> | undefined;\r\n\tTOKEN?: string | Resolver<string> | undefined;\r\n\tUSERNAME?: string | Resolver<string> | undefined;\r\n\tVERSION: string;\r\n\tWITH_CREDENTIALS: boolean;\r\n\tinterceptors: {request: Interceptors<RequestInit>;\r\n\t\tresponse: Interceptors<Response>;};\r\n};\r\n\r\nexport const OpenAPI: OpenAPIConfig = {\r\n\tBASE: '',\r\n\tCREDENTIALS: 'include',\r\n\tENCODE_PATH: undefined,\r\n\tHEADERS: undefined,\r\n\tPASSWORD: undefined,\r\n\tTOKEN: undefined,\r\n\tUSERNAME: undefined,\r\n\tVERSION: 'Latest',\r\n\tWITH_CREDENTIALS: false,\r\n\tinterceptors: {request: new Interceptors(),response: new Interceptors(),\r\n\t},\r\n};","import { ApiError } from './ApiError';\r\nimport type { ApiRequestOptions } from './ApiRequestOptions';\r\nimport type { ApiResult } from './ApiResult';\r\nimport { CancelablePromise } from './CancelablePromise';\r\nimport type { OnCancel } from './CancelablePromise';\r\nimport type { OpenAPIConfig } from './OpenAPI';\r\n\r\nexport const isString = (value: unknown): value is string => {\r\n\treturn typeof value === 'string';\r\n};\r\n\r\nexport const isStringWithValue = (value: unknown): value is string => {\r\n\treturn isString(value) && value !== '';\r\n};\r\n\r\nexport const isBlob = (value: any): value is Blob => {\r\n\treturn value instanceof Blob;\r\n};\r\n\r\nexport const isFormData = (value: unknown): value is FormData => {\r\n\treturn value instanceof FormData;\r\n};\r\n\r\nexport const base64 = (str: string): string => {\r\n\ttry {\r\n\t\treturn btoa(str);\r\n\t} catch (err) {\r\n\t\t// @ts-ignore\r\n\t\treturn Buffer.from(str).toString('base64');\r\n\t}\r\n};\r\n\r\nexport const getQueryString = (params: Record<string, unknown>): string => {\r\n\tconst qs: string[] = [];\r\n\r\n\tconst append = (key: string, value: unknown) => {\r\n\t\tqs.push(`${encodeURIComponent(key)}=${encodeURIComponent(String(value))}`);\r\n\t};\r\n\r\n\tconst encodePair = (key: string, value: unknown) => {\r\n\t\tif (value === undefined || value === null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (Array.isArray(value)) {\r\n\t\t\tvalue.forEach(v => encodePair(key, v));\r\n\t\t} else if (typeof value === 'object') {\r\n\t\t\tObject.entries(value).forEach(([k, v]) => encodePair(`${key}[${k}]`, v));\r\n\t\t} else {\r\n\t\t\tappend(key, value);\r\n\t\t}\r\n\t};\r\n\r\n\tObject.entries(params).forEach(([key, value]) => encodePair(key, value));\r\n\r\n\treturn qs.length ? `?${qs.join('&')}` : '';\r\n};\r\n\r\nconst getUrl = (config: OpenAPIConfig, options: ApiRequestOptions): string => {\r\n\tconst encoder = config.ENCODE_PATH || encodeURI;\r\n\r\n\tconst path = options.url\r\n\t\t.replace('{api-version}', config.VERSION)\r\n\t\t.replace(/{(.*?)}/g, (substring: string, group: string) => {\r\n\t\t\tif (options.path?.hasOwnProperty(group)) {\r\n\t\t\t\treturn encoder(String(options.path[group]));\r\n\t\t\t}\r\n\t\t\treturn substring;\r\n\t\t});\r\n\r\n\tconst url = config.BASE + path;\r\n\treturn options.query ? url + getQueryString(options.query) : url;\r\n};\r\n\r\nexport const getFormData = (options: ApiRequestOptions): FormData | undefined => {\r\n\tif (options.formData) {\r\n\t\tconst formData = new FormData();\r\n\r\n\t\tconst process = (key: string, value: unknown) => {\r\n\t\t\tif (isString(value) || isBlob(value)) {\r\n\t\t\t\tformData.append(key, value);\r\n\t\t\t} else {\r\n\t\t\t\tformData.append(key, JSON.stringify(value));\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tObject.entries(options.formData)\r\n\t\t\t.filter(([, value]) => value !== undefined && value !== null)\r\n\t\t\t.forEach(([key, value]) => {\r\n\t\t\t\tif (Array.isArray(value)) {\r\n\t\t\t\t\tvalue.forEach(v => process(key, v));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tprocess(key, value);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\treturn formData;\r\n\t}\r\n\treturn undefined;\r\n};\r\n\r\ntype Resolver<T> = (options: ApiRequestOptions) => Promise<T>;\r\n\r\nexport const resolve = async <T>(options: ApiRequestOptions, resolver?: T | Resolver<T>): Promise<T | undefined> => {\r\n\tif (typeof resolver === 'function') {\r\n\t\treturn (resolver as Resolver<T>)(options);\r\n\t}\r\n\treturn resolver;\r\n};\r\n\r\nexport const getHeaders = async (config: OpenAPIConfig, options: ApiRequestOptions): Promise<Headers> => {\r\n\tconst [token, username, password, additionalHeaders] = await Promise.all([\r\n\t\tresolve(options, config.TOKEN),\r\n\t\tresolve(options, config.USERNAME),\r\n\t\tresolve(options, config.PASSWORD),\r\n\t\tresolve(options, config.HEADERS),\r\n\t]);\r\n\r\n\tconst headers = Object.entries({\r\n\t\tAccept: 'application/json',\r\n\t\t...additionalHeaders,\r\n\t\t...options.headers,\r\n\t})\r\n\t\t.filter(([, value]) => value !== undefined && value !== null)\r\n\t\t.reduce((headers, [key, value]) => ({\r\n\t\t\t...headers,\r\n\t\t\t[key]: String(value),\r\n\t\t}), {} as Record<string, string>);\r\n\r\n\tif (isStringWithValue(token)) {\r\n\t\theaders['Authorization'] = `Bearer ${token}`;\r\n\t}\r\n\r\n\tif (isStringWithValue(username) && isStringWithValue(password)) {\r\n\t\tconst credentials = base64(`${username}:${password}`);\r\n\t\theaders['Authorization'] = `Basic ${credentials}`;\r\n\t}\r\n\r\n\tif (options.body !== undefined) {\r\n\t\tif (options.mediaType) {\r\n\t\t\theaders['Content-Type'] = options.mediaType;\r\n\t\t} else if (isBlob(options.body)) {\r\n\t\t\theaders['Content-Type'] = options.body.type || 'application/octet-stream';\r\n\t\t} else if (isString(options.body)) {\r\n\t\t\theaders['Content-Type'] = 'text/plain';\r\n\t\t} else if (!isFormData(options.body)) {\r\n\t\t\theaders['Content-Type'] = 'application/json';\r\n\t\t}\r\n\t}\r\n\r\n\treturn new Headers(headers);\r\n};\r\n\r\nexport const getRequestBody = (options: ApiRequestOptions): unknown => {\r\n\tif (options.body !== undefined) {\r\n\t\tif (options.mediaType?.includes('application/json') || options.mediaType?.includes('+json')) {\r\n\t\t\treturn JSON.stringify(options.body);\r\n\t\t} else if (isString(options.body) || isBlob(options.body) || isFormData(options.body)) {\r\n\t\t\treturn options.body;\r\n\t\t} else {\r\n\t\t\treturn JSON.stringify(options.body);\r\n\t\t}\r\n\t}\r\n\treturn undefined;\r\n};\r\n\r\nexport const sendRequest = async (\r\n\tconfig: OpenAPIConfig,\r\n\toptions: ApiRequestOptions,\r\n\turl: string,\r\n\tbody: any,\r\n\tformData: FormData | undefined,\r\n\theaders: Headers,\r\n\tonCancel: OnCancel\r\n): Promise<Response> => {\r\n\tconst controller = new AbortController();\r\n\r\n\tlet request: RequestInit = {\r\n\t\theaders,\r\n\t\tbody: body ?? formData,\r\n\t\tmethod: options.method,\r\n\t\tsignal: controller.signal,\r\n\t};\r\n\r\n\tif (config.WITH_CREDENTIALS) {\r\n\t\trequest.credentials = config.CREDENTIALS;\r\n\t}\r\n\r\n\tfor (const fn of config.interceptors.request._fns) {\r\n\t\trequest = await fn(request);\r\n\t}\r\n\r\n\tonCancel(() => controller.abort());\r\n\r\n\treturn await fetch(url, request);\r\n};\r\n\r\nexport const getResponseHeader = (response: Response, responseHeader?: string): string | undefined => {\r\n\tif (responseHeader) {\r\n\t\tconst content = response.headers.get(responseHeader);\r\n\t\tif (isString(content)) {\r\n\t\t\treturn content;\r\n\t\t}\r\n\t}\r\n\treturn undefined;\r\n};\r\n\r\nexport const getResponseBody = async (response: Response): Promise<unknown> => {\r\n\tif (response.status !== 204) {\r\n\t\ttry {\r\n\t\t\tconst contentType = response.headers.get('Content-Type');\r\n\t\t\tif (contentType) {\r\n\t\t\t\tconst binaryTypes = ['application/octet-stream', 'application/pdf', 'application/zip', 'audio/', 'image/', 'video/'];\r\n\t\t\t\tif (contentType.includes('application/json') || contentType.includes('+json')) {\r\n\t\t\t\t\treturn await response.json();\r\n\t\t\t\t} else if (binaryTypes.some(type => contentType.includes(type))) {\r\n\t\t\t\t\treturn await response.blob();\r\n\t\t\t\t} else if (contentType.includes('multipart/form-data')) {\r\n\t\t\t\t\treturn await response.formData();\r\n\t\t\t\t} else if (contentType.includes('text/')) {\r\n\t\t\t\t\treturn await response.text();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(error);\r\n\t\t}\r\n\t}\r\n\treturn undefined;\r\n};\r\n\r\nexport const catchErrorCodes = (options: ApiRequestOptions, result: ApiResult): void => {\r\n\tconst errors: Record<number, string> = {\r\n\t\t400: 'Bad Request',\r\n\t\t401: 'Unauthorized',\r\n\t\t402: 'Payment Required',\r\n\t\t403: 'Forbidden',\r\n\t\t404: 'Not Found',\r\n\t\t405: 'Method Not Allowed',\r\n\t\t406: 'Not Acceptable',\r\n\t\t407: 'Proxy Authentication Required',\r\n\t\t408: 'Request Timeout',\r\n\t\t409: 'Conflict',\r\n\t\t410: 'Gone',\r\n\t\t411: 'Length Required',\r\n\t\t412: 'Precondition Failed',\r\n\t\t413: 'Payload Too Large',\r\n\t\t414: 'URI Too Long',\r\n\t\t415: 'Unsupported Media Type',\r\n\t\t416: 'Range Not Satisfiable',\r\n\t\t417: 'Expectation Failed',\r\n\t\t418: 'Im a teapot',\r\n\t\t421: 'Misdirected Request',\r\n\t\t422: 'Unprocessable Content',\r\n\t\t423: 'Locked',\r\n\t\t424: 'Failed Dependency',\r\n\t\t425: 'Too Early',\r\n\t\t426: 'Upgrade Required',\r\n\t\t428: 'Precondition Required',\r\n\t\t429: 'Too Many Requests',\r\n\t\t431: 'Request Header Fields Too Large',\r\n\t\t451: 'Unavailable For Legal Reasons',\r\n\t\t500: 'Internal Server Error',\r\n\t\t501: 'Not Implemented',\r\n\t\t502: 'Bad Gateway',\r\n\t\t503: 'Service Unavailable',\r\n\t\t504: 'Gateway Timeout',\r\n\t\t505: 'HTTP Version Not Supported',\r\n\t\t506: 'Variant Also Negotiates',\r\n\t\t507: 'Insufficient Storage',\r\n\t\t508: 'Loop Detected',\r\n\t\t510: 'Not Extended',\r\n\t\t511: 'Network Authentication Required',\r\n\t\t...options.errors,\r\n\t}\r\n\r\n\tconst error = errors[result.status];\r\n\tif (error) {\r\n\t\tthrow new ApiError(options, result, error);\r\n\t}\r\n\r\n\tif (!result.ok) {\r\n\t\tconst errorStatus = result.status ?? 'unknown';\r\n\t\tconst errorStatusText = result.statusText ?? 'unknown';\r\n\t\tconst errorBody = (() => {\r\n\t\t\ttry {\r\n\t\t\t\treturn JSON.stringify(result.body, null, 2);\r\n\t\t\t} catch (e) {\r\n\t\t\t\treturn undefined;\r\n\t\t\t}\r\n\t\t})();\r\n\r\n\t\tthrow new ApiError(options, result,\r\n\t\t\t`Generic Error: status: ${errorStatus}; status text: ${errorStatusText}; body: ${errorBody}`\r\n\t\t);\r\n\t}\r\n};\r\n\r\n/**\r\n * Request method\r\n * @param config The OpenAPI configuration object\r\n * @param options The request options from the service\r\n * @returns CancelablePromise<T>\r\n * @throws ApiError\r\n */\r\nexport const request = <T>(config: OpenAPIConfig, options: ApiRequestOptions): CancelablePromise<T> => {\r\n\treturn new CancelablePromise(async (resolve, reject, onCancel) => {\r\n\t\ttry {\r\n\t\t\tconst url = getUrl(config, options);\r\n\t\t\tconst formData = getFormData(options);\r\n\t\t\tconst body = getRequestBody(options);\r\n\t\t\tconst headers = await getHeaders(config, options);\r\n\r\n\t\t\tif (!onCancel.isCancelled) {\r\n\t\t\t\tlet response = await sendRequest(config, options, url, body, formData, headers, onCancel);\r\n\r\n\t\t\t\tfor (const fn of config.interceptors.response._fns) {\r\n\t\t\t\t\tresponse = await fn(response);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst responseBody = await getResponseBody(response);\r\n\t\t\t\tconst responseHeader = getResponseHeader(response, options.responseHeader);\r\n\r\n\t\t\t\tconst result: ApiResult = {\r\n\t\t\t\t\turl,\r\n\t\t\t\t\tok: response.ok,\r\n\t\t\t\t\tstatus: response.status,\r\n\t\t\t\t\tstatusText: response.statusText,\r\n\t\t\t\t\tbody: responseHeader ?? responseBody,\r\n\t\t\t\t};\r\n\r\n\t\t\t\tcatchErrorCodes(options, result);\r\n\r\n\t\t\t\tresolve(result.body);\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\treject(error);\r\n\t\t}\r\n\t});\r\n};","// This file is auto-generated by @hey-api/openapi-ts\r\n\r\n\r\nimport type { CancelablePromise } from './core/CancelablePromise';\r\nimport { OpenAPI } from './core/OpenAPI';\r\nimport { request as __request } from './core/request';\r\nimport type { $OpenApiTs } from './types.gen';\r\n\r\nexport class SustainabilityService {\r\n    /**\r\n * @returns unknown OK\r\n * @throws ApiError\r\n */\r\n    public static checkPage(data: $OpenApiTs['/umbraco/sustainability/api/v1/checkPage']['get']['req'] = {}): CancelablePromise<$OpenApiTs['/umbraco/sustainability/api/v1/checkPage']['get']['res'][200]> {\r\n        const { pageGuid } = data;\r\n        return __request(OpenAPI, {\r\n    method: 'GET',\r\n    url: '/umbraco/sustainability/api/v1/checkPage',\r\n    query: {\r\n        pageGuid\r\n    }\r\n});\r\n    }\r\n    \r\n    /**\r\n * @returns unknown OK\r\n * @throws ApiError\r\n */\r\n    public static getAverageData(): CancelablePromise<$OpenApiTs['/umbraco/sustainability/api/v1/getAverageData']['get']['res'][200]> {\r\n        return __request(OpenAPI, {\r\n    method: 'GET',\r\n    url: '/umbraco/sustainability/api/v1/getAverageData'\r\n});\r\n    }\r\n    \r\n    /**\r\n * @returns unknown OK\r\n * @throws ApiError\r\n */\r\n    public static getOverviewData(data: $OpenApiTs['/umbraco/sustainability/api/v1/getOverviewData']['get']['req'] = {}): CancelablePromise<$OpenApiTs['/umbraco/sustainability/api/v1/getOverviewData']['get']['res'][200]> {\r\n        const { pageNumber, pageSize, orderBy, direction } = data;\r\n        return __request(OpenAPI, {\r\n    method: 'GET',\r\n    url: '/umbraco/sustainability/api/v1/getOverviewData',\r\n    query: {\r\n        pageNumber,\r\n        pageSize,\r\n        orderBy,\r\n        direction\r\n    }\r\n});\r\n    }\r\n    \r\n    /**\r\n * @returns unknown OK\r\n * @throws ApiError\r\n */\r\n    public static getPageData(data: $OpenApiTs['/umbraco/sustainability/api/v1/getPageData']['get']['req'] = {}): CancelablePromise<$OpenApiTs['/umbraco/sustainability/api/v1/getPageData']['get']['res'][200]> {\r\n        const { pageGuid } = data;\r\n        return __request(OpenAPI, {\r\n    method: 'GET',\r\n    url: '/umbraco/sustainability/api/v1/getPageData',\r\n    query: {\r\n        pageGuid\r\n    }\r\n});\r\n    }\r\n    \r\n    /**\r\n * @returns boolean OK\r\n * @throws ApiError\r\n */\r\n    public static savePageData(data: $OpenApiTs['/umbraco/sustainability/api/v1/savePageData']['post']['req'] = {}): CancelablePromise<$OpenApiTs['/umbraco/sustainability/api/v1/savePageData']['post']['res'][200]> {\r\n        const { pageGuid, requestBody } = data;\r\n        return __request(OpenAPI, {\r\n    method: 'POST',\r\n    url: '/umbraco/sustainability/api/v1/savePageData',\r\n    query: {\r\n        pageGuid\r\n    },\r\n    body: requestBody,\r\n    mediaType: 'application/json'\r\n});\r\n    }\r\n    \r\n}","import { UmbControllerHost } from \"@umbraco-cms/backoffice/controller-api\";\r\nimport { UmbDataSourceResponse } from \"@umbraco-cms/backoffice/repository\";\r\nimport { tryExecuteAndNotify } from '@umbraco-cms/backoffice/resources';\r\nimport { SustainabilityService, type SustainabilityResponse, DirectionModel, PagedResultPageMetricModel, AveragePageMetrics } from \"../../api\";\r\n\r\nexport interface SustainabilityDataSource {\r\n\r\n  checkPage(pageGuid: string): Promise<UmbDataSourceResponse<SustainabilityResponse>>;\r\n  getPageData(pageGuid: string): Promise<UmbDataSourceResponse<SustainabilityResponse>>;\r\n  savePageData(pageGuid: string, sustainabilityResponse: SustainabilityResponse): Promise<UmbDataSourceResponse<boolean>>;\r\n  getOverviewData(direction: DirectionModel, orderBy: string, pageNumber: number, pageSize: number): Promise<UmbDataSourceResponse<PagedResultPageMetricModel>>;\r\n  getAverageData(): Promise<UmbDataSourceResponse<AveragePageMetrics>>;\r\n\r\n}\r\n\r\nexport class SustainabilityManagementDataSource implements SustainabilityDataSource {\r\n\r\n  #host: UmbControllerHost;\r\n\r\n  constructor(host: UmbControllerHost) {\r\n    this.#host = host;\r\n  }\r\n\r\n  async checkPage(pageGuid: string): Promise<UmbDataSourceResponse<SustainabilityResponse>> {\r\n    return await tryExecuteAndNotify(this.#host, SustainabilityService.checkPage({ pageGuid: pageGuid }));\r\n  }\r\n\r\n  async getPageData(pageGuid: string): Promise<UmbDataSourceResponse<SustainabilityResponse>> {\r\n    return await tryExecuteAndNotify(this.#host, SustainabilityService.getPageData({ pageGuid: pageGuid }));\r\n  }\r\n\r\n  async savePageData(pageGuid: string, sustainabilityResponse: SustainabilityResponse): Promise<UmbDataSourceResponse<boolean>> {\r\n    return await tryExecuteAndNotify(this.#host, SustainabilityService.savePageData({\r\n      pageGuid: pageGuid,\r\n      requestBody: sustainabilityResponse\r\n    }))\r\n  }\r\n\r\n  async getOverviewData(direction: DirectionModel, orderBy: string, pageNumber: number, pageSize: number): Promise<UmbDataSourceResponse<PagedResultPageMetricModel>> {\r\n    return await tryExecuteAndNotify(this.#host, SustainabilityService.getOverviewData({ direction, orderBy, pageNumber, pageSize }));\r\n  }\r\n\r\n  async getAverageData(): Promise<UmbDataSourceResponse<AveragePageMetrics>> {\r\n    return await tryExecuteAndNotify(this.#host, SustainabilityService.getAverageData());\r\n  }\r\n\r\n}\r\n","import { UmbControllerBase } from \"@umbraco-cms/backoffice/class-api\";\r\nimport { UmbControllerHost } from \"@umbraco-cms/backoffice/controller-api\";\r\nimport { SustainabilityManagementDataSource } from \"./sources/sustainability.source\";\r\nimport { DirectionModel, SustainabilityResponse } from \"../api\";\r\n\r\nexport class SustainabilityRepository extends UmbControllerBase {\r\n  #sustainabilityDataSource: SustainabilityManagementDataSource;\r\n\r\n  constructor(host: UmbControllerHost) {\r\n    super(host);\r\n    this.#sustainabilityDataSource = new SustainabilityManagementDataSource(this);\r\n  }\r\n\r\n  async checkPage(pageGuid: string) {\r\n    return await this.#sustainabilityDataSource.checkPage(pageGuid);\r\n  }\r\n\r\n  async getPageData(pageGuid: string) {\r\n    return await this.#sustainabilityDataSource.getPageData(pageGuid);\r\n  }\r\n\r\n  async savePageData(pageGuid: string, sustainabilityResponse: SustainabilityResponse) {\r\n    return await this.#sustainabilityDataSource.savePageData(pageGuid, sustainabilityResponse);\r\n  }\r\n\r\n  async getOverviewData(direction: DirectionModel, orderBy: string, pageNumber: number, pageSize: number) {\r\n    return await this.#sustainabilityDataSource.getOverviewData(direction, orderBy, pageNumber, pageSize);\r\n  }\r\n\r\n  async getAverageData() {\r\n    return await this.#sustainabilityDataSource.getAverageData();\r\n  }\r\n}\r\n","import { AveragePageMetrics, DirectionModel, PagedResultPageMetricModel, SustainabilityResponse } from \"../api\";\r\nimport { SustainabilityRepository } from \"../repository/sustainability.repository\";\r\nimport { UmbControllerBase } from \"@umbraco-cms/backoffice/class-api\";\r\nimport { UmbContextToken } from \"@umbraco-cms/backoffice/context-api\";\r\nimport { UmbControllerHost } from \"@umbraco-cms/backoffice/controller-api\";\r\nimport { UmbObjectState } from \"@umbraco-cms/backoffice/observable-api\";\r\n\r\nexport class SustainabilityContext extends UmbControllerBase {\r\n  \r\n  #repository: SustainabilityRepository;\r\n\r\n  #overviewData = new UmbObjectState<PagedResultPageMetricModel | undefined>(undefined);\r\n  public readonly overviewData = this.#overviewData.asObservable();\r\n\r\n  #averageData = new UmbObjectState<AveragePageMetrics | undefined>(undefined);\r\n  public readonly averageData = this.#averageData.asObservable();\r\n\r\n  constructor(host: UmbControllerHost) {\r\n    super(host);\r\n    this.#repository = new SustainabilityRepository(this);\r\n  }\r\n\r\n  async checkPage(pageGuid: string, initialLoad: boolean = true) {\r\n    const { data } = await this.#repository.checkPage(pageGuid);\r\n    if (data) {\r\n      if (!initialLoad) {\r\n        await this.savePageData(pageGuid, data);\r\n      }\r\n\r\n      return data;\r\n    }\r\n\r\n    return undefined;\r\n  }\r\n\r\n  async getPageData(pageGuid: string) {\r\n    const { data } = await this.#repository.getPageData(pageGuid);\r\n    if (data) {\r\n      return data;\r\n    }\r\n\r\n    return undefined;\r\n  }\r\n  \r\n  async savePageData(pageGuid: string, sustainabilityResponse: SustainabilityResponse) {\r\n    const saved = await this.#repository.savePageData(pageGuid, sustainabilityResponse);\r\n    return saved;\r\n  }\r\n\r\n  async getOverviewData(direction: DirectionModel, orderBy: string, pageNumber: number, pageSize: number) {\r\n    const { data } = await this.#repository.getOverviewData(direction, orderBy, pageNumber, pageSize);\r\n    if (data) {\r\n      this.#overviewData.setValue(data);\r\n    }\r\n  }\r\n\r\n  async getAverageData() {\r\n    const { data } = await this.#repository.getAverageData();\r\n    if (data) {\r\n      this.#averageData.setValue(data);\r\n    }\r\n  }\r\n  \r\n}\r\n\r\nexport default SustainabilityContext;\r\n\r\nexport const SUSTAINABILITY_CONTEXT =\r\n  new UmbContextToken<SustainabilityContext>('SustainabilityContext');\r\n","import { UmbElementMixin } from \"@umbraco-cms/backoffice/element-api\"\r\nimport { LitElement, customElement, html, property } from \"@umbraco-cms/backoffice/external/lit\";\r\nimport { UUIInterfaceColor } from \"@umbraco-cms/backoffice/external/uui\";\r\n\r\nconst elementName = \"sustainability-carbon-rating\";\r\n\r\n@customElement(elementName)\r\nexport class SustainabilityCarbonRating extends UmbElementMixin(LitElement) {\r\n\r\n  @property({type: String}) \r\n  carbonRating: string | null | undefined = undefined;\r\n\r\n  _getColour(carbonRating: string | null | undefined): UUIInterfaceColor {\r\n    if (carbonRating == \"E\" || carbonRating == \"F\") {\r\n      return \"danger\";\r\n    }\r\n    else if (carbonRating == \"D\") {\r\n      return \"warning\";\r\n    }\r\n    else return \"positive\";\r\n  }\r\n\r\n  render() {\r\n    return html`\r\n    <uui-tag .color=${this._getColour(this.carbonRating)}>\r\n      ${this.carbonRating}\r\n    </uui-tag>\r\n    `\r\n  }\r\n}\r\n\r\nexport default SustainabilityCarbonRating;\r\n\r\ndeclare global {\r\n  interface HTMLElementTagNameMap {\r\n    [elementName]: SustainabilityCarbonRating;\r\n  }\r\n}\r\n","import { UmbEntryPointOnInit } from '@umbraco-cms/backoffice/extension-api';\r\n\r\nimport { manifests as documentManifests } from './documents/manifest.ts';\r\nimport { manifests as sectionManifests } from './section/manifests.ts';\r\n\r\nimport { UMB_AUTH_CONTEXT } from '@umbraco-cms/backoffice/auth';\r\nimport SustainabilityContext, { SUSTAINABILITY_CONTEXT } from './context/sustainability.context.ts';\r\nimport { OpenAPI } from './api/index.ts';\r\n\r\nexport * from './components/index';\r\nexport * from './repository/index';\r\n\r\nexport const onInit: UmbEntryPointOnInit = (host, extensionRegistry) => {\r\n\r\n  extensionRegistry.registerMany([\r\n    ...documentManifests,\r\n    ...sectionManifests\r\n  ]);\r\n\r\n  host.consumeContext(UMB_AUTH_CONTEXT, async (auth) => {\r\n    if (!auth) return;\r\n\r\n    const umbOpenApi = auth.getOpenApiConfiguration();\r\n    OpenAPI.BASE = umbOpenApi.base;\r\n    OpenAPI.TOKEN = umbOpenApi.token;\r\n    OpenAPI.WITH_CREDENTIALS = umbOpenApi.withCredentials;\r\n    OpenAPI.CREDENTIALS = umbOpenApi.credentials;\r\n  });\r\n\r\n  host.provideContext(SUSTAINABILITY_CONTEXT, new SustainabilityContext(host));\r\n};\r\n"],"names":["workspaceView","manifests","SUSTAINABILITY_OVERVIEW_ROOT_ENTITY_TYPE","menuItem","workspaceAlias","contextAlias","workspace","context","sustainability_context","workspaceManifests","menuItems","SUSTAINABILITY_STATS_ROOT_ENTITY_TYPE","sectionAlias","menuAlias","section","sectionView","menu","menuSectionSidebarApp","overviewManifests","statsManifests","ApiError","request","response","message","CancelError","CancelablePromise","executor","resolve","reject","onResolve","value","onReject","reason","onCancel","cancelHandler","onFulfilled","onRejected","onFinally","error","Interceptors","fn","index","OpenAPI","isString","isStringWithValue","isBlob","isFormData","base64","str","getQueryString","params","qs","append","key","encodePair","v","k","getUrl","config","options","encoder","path","substring","group","_a","url","getFormData","formData","process","resolver","getHeaders","token","username","password","additionalHeaders","headers","credentials","getRequestBody","_b","sendRequest","body","controller","getResponseHeader","responseHeader","content","getResponseBody","contentType","binaryTypes","type","catchErrorCodes","result","errorStatus","errorStatusText","errorBody","responseBody","SustainabilityService","data","pageGuid","__request","pageNumber","pageSize","orderBy","direction","requestBody","SustainabilityManagementDataSource","host","__privateAdd","_host","__privateSet","tryExecuteAndNotify","__privateGet","sustainabilityResponse","SustainabilityRepository","UmbControllerBase","_sustainabilityDataSource","SustainabilityContext","_repository","_overviewData","_averageData","UmbObjectState","initialLoad","SUSTAINABILITY_CONTEXT","UmbContextToken","elementName","SustainabilityCarbonRating","UmbElementMixin","LitElement","carbonRating","html","__decorateClass","property","customElement","onInit","extensionRegistry","documentManifests","sectionManifests","UMB_AUTH_CONTEXT","auth","umbOpenApi"],"mappings":";;;;;;;;;;;;;;;;AAEA,MAAMA,IAAuC;AAAA,EAC3C,MAAM;AAAA,EACN,OAAO;AAAA,EACP,MAAM;AAAA,EACN,IAAI,MAAM,OAAO,6CAA0C;AAAA,EAC3D,QAAQ;AAAA,EACR,MAAM;AAAA,IACJ,MAAM;AAAA,IACN,UAAU;AAAA,IACV,OAAO;AAAA,EACT;AAAA,EACA,YAAY;AAAA,IACV;AAAA,MACE,OAAO;AAAA,MACP,OAAO;AAAA,IACT;AAAA,EACF;AACF,GAEaC,IAAY,CAACD,CAAa,GCpB1BE,IAA2C,iBCElDC,IAA6B;AAAA,EACjC,MAAM;AAAA,EACN,OAAO;AAAA,EACP,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,MAAM;AAAA,IACJ,OAAO;AAAA,IACP,MAAM;AAAA,IACN,YAAYD;AAAA,IACZ,OAAO,CAAC,yBAAyB;AAAA,EACnC;AACF,GAEaD,KAAY,CAACE,CAAQ,GCb5BC,KAAiB,qCACjBC,KAAe,oCAEfC,KAA+B;AAAA,EACnC,MAAM;AAAA,EACN,OAAOF;AAAAA,EACP,MAAM;AAAA,EACN,IAAI,MAAM,OAAO,0CAA8B;AAAA,EAC/C,MAAM;AAAA,IACJ,YAAYF;AAAA,EACd;AACF,GAEMK,KAAoC;AAAA,EACxC,MAAM;AAAA,EACN,OAAOF;AAAA,EACP,MAAM;AAAA,EACN,IAAI,MAAM,QAAgD,QAAA,EAAA,KAAA,MAAAG,EAAA;AAC5D,GAEaP,KAAY;AAAA,EACvBM;AAAA,EACAD;AACF,GCvBaL,KAAY;AAAA,EACvB,GAAGQ;AAAAA,EACH,GAAGC;AACL,GCNaC,IAAwC,cCG/CR,KAA6B;AAAA,EACjC,MAAM;AAAA,EACN,OAAO;AAAA,EACP,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,MAAM;AAAA,IACJ,OAAO;AAAA,IACP,MAAM;AAAA,IACN,YAAYQ;AAAA,IACZ,OAAO,CAAC,yBAAyB;AAAA,EACnC;AACF,GAEaV,KAAY,CAACE,EAAQ,GCb5BC,KAAiB,kCAEjBE,KAA+B;AAAA,EACnC,MAAM;AAAA,EACN,OAAOF;AAAA,EACP,MAAM;AAAA,EACN,IAAI,MAAM,OAAO,uCAA2B;AAAA,EAC5C,MAAM;AAAA,IACJ,YAAYO;AAAA,EACd;AACF,GAEaV,KAAY;AAAA,EACvBK;AACF,GCdaL,KAAY;AAAA,EACvB,GAAGQ;AAAAA,EACH,GAAGC;AACL,GCDME,IAAe,8BACfC,IAAY,2BAEZC,KAA2B;AAAA,EAC/B,MAAM;AAAA,EACN,OAAOF;AAAA,EACP,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,MAAM;AAAA,IACJ,OAAO;AAAA,IACP,UAAU;AAAA,EACZ;AAAA,EACA,YAAY;AAAA,IACV;AAAA,MACE,OAAO;AAAA,MACP,OAAOA;AAAA,IACT;AAAA,EACF;AACF,GAEMG,KAAmC;AAAA,EACvC,MAAM;AAAA,EACN,OAAO;AAAA,EACP,MAAM;AAAA,EACN,SAAS,MAAM,OAAO,mDAAuC;AAAA,EAC7D,MAAM;AAAA,IACJ,OAAO;AAAA,IACP,MAAM;AAAA,IACN,UAAU;AAAA,EACZ;AAAA,EACA,YAAY;AAAA,IACV;AAAA,MACE,OAAO;AAAA,MACP,OAAOH;AAAA,IACT;AAAA,EACF;AACF,GAEMI,KAAqB;AAAA,EACzB,MAAM;AAAA,EACN,OAAOH;AAAA,EACP,MAAM;AAAA,EACN,MAAM;AAAA,IACJ,OAAO;AAAA,EACT;AACF,GAEMI,KAAmD;AAAA,EACvD,MAAM;AAAA,EACN,MAAM;AAAA,EACN,OAAO;AAAA,EACP,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,MAAM;AAAA,IACJ,OAAO;AAAA,IACP,MAAMJ;AAAA,EACR;AAAA,EACA,YAAY;AAAA,IACV;AAAA,MACE,OAAO;AAAA,MACP,OAAOD;AAAA,IACT;AAAA,EACF;AACF,GAEaX,KAAY;AAAA,EACvBa;AAAA,EACAC;AAAA,EACAC;AAAA,EACAC;AAAA,EACA,GAAGC;AAAAA,EACH,GAAGC;AACL;AC1EO,MAAMC,UAAiB,MAAM;AAAA,EAOnC,YAAYC,GAA4BC,GAAqBC,GAAiB;AAC7E,UAAMA,CAAO,GAEb,KAAK,OAAO,YACZ,KAAK,MAAMD,EAAS,KACpB,KAAK,SAASA,EAAS,QACvB,KAAK,aAAaA,EAAS,YAC3B,KAAK,OAAOA,EAAS,MACrB,KAAK,UAAUD;AAAA,EAChB;AACD;ACpBO,MAAMG,WAAoB,MAAM;AAAA,EACtC,YAAYD,GAAiB;AAC5B,UAAMA,CAAO,GACb,KAAK,OAAO;AAAA,EACb;AAAA,EAEA,IAAW,cAAuB;AAC1B,WAAA;AAAA,EACR;AACD;AAUO,MAAME,GAA2C;AAAA,EASvD,YACCC,GAKC;AACD,SAAK,cAAc,IACnB,KAAK,cAAc,IACnB,KAAK,eAAe,IACpB,KAAK,iBAAiB,IACtB,KAAK,UAAU,IAAI,QAAW,CAACC,GAASC,MAAW;AAClD,WAAK,WAAWD,GAChB,KAAK,UAAUC;AAET,YAAAC,IAAY,CAACC,MAAoC;AACtD,QAAI,KAAK,eAAe,KAAK,eAAe,KAAK,iBAGjD,KAAK,cAAc,IACf,KAAK,YAAU,KAAK,SAASA,CAAK;AAAA,MAAA,GAGjCC,IAAW,CAACC,MAA2B;AAC5C,QAAI,KAAK,eAAe,KAAK,eAAe,KAAK,iBAGjD,KAAK,cAAc,IACf,KAAK,WAAS,KAAK,QAAQA,CAAM;AAAA,MAAA,GAGhCC,IAAW,CAACC,MAAoC;AACrD,QAAI,KAAK,eAAe,KAAK,eAAe,KAAK,gBAG5C,KAAA,eAAe,KAAKA,CAAa;AAAA,MAAA;AAGhC,oBAAA,eAAeD,GAAU,cAAc;AAAA,QAC7C,KAAK,MAAe,KAAK;AAAA,MAAA,CACzB,GAEM,OAAA,eAAeA,GAAU,cAAc;AAAA,QAC7C,KAAK,MAAe,KAAK;AAAA,MAAA,CACzB,GAEM,OAAA,eAAeA,GAAU,eAAe;AAAA,QAC9C,KAAK,MAAe,KAAK;AAAA,MAAA,CACzB,GAEMP,EAASG,GAAWE,GAAUE,CAAoB;AAAA,IAAA,CACzD;AAAA,EACF;AAAA,EAEA,KAAK,OAAO,WAAW,IAAI;AACnB,WAAA;AAAA,EACR;AAAA,EAEO,KACNE,GACAC,GAC+B;AAC/B,WAAO,KAAK,QAAQ,KAAKD,GAAaC,CAAU;AAAA,EACjD;AAAA,EAEO,MACNA,GACuB;AAChB,WAAA,KAAK,QAAQ,MAAMA,CAAU;AAAA,EACrC;AAAA,EAEO,QAAQC,GAA6C;AACpD,WAAA,KAAK,QAAQ,QAAQA,CAAS;AAAA,EACtC;AAAA,EAEO,SAAe;AACrB,QAAI,OAAK,eAAe,KAAK,eAAe,KAAK,eAI7C;AAAA,UADJ,KAAK,eAAe,IAChB,KAAK,eAAe;AACnB,YAAA;AACQ,qBAAAH,KAAiB,KAAK;AAClB,YAAAA;iBAEPI,GAAO;AACP,kBAAA,KAAK,+BAA+BA,CAAK;AACjD;AAAA,QACD;AAED,WAAK,eAAe,SAAS,GACzB,KAAK,WAAS,KAAK,QAAQ,IAAId,GAAY,iBAAiB,CAAC;AAAA;AAAA,EAClE;AAAA,EAEA,IAAW,cAAuB;AACjC,WAAO,KAAK;AAAA,EACb;AACD;ACvHO,MAAMe,EAAgB;AAAA,EAG3B,cAAc;AACZ,SAAK,OAAO;EACd;AAAA,EAEA,MAAMC,GAAmB;AACvB,UAAMC,IAAQ,KAAK,KAAK,QAAQD,CAAE;AAClC,IAAIC,MAAU,OACZ,KAAK,OAAO;AAAA,MACV,GAAG,KAAK,KAAK,MAAM,GAAGA,CAAK;AAAA,MAC3B,GAAG,KAAK,KAAK,MAAMA,IAAQ,CAAC;AAAA,IAAA;AAAA,EAGlC;AAAA,EAEA,IAAID,GAAmB;AACrB,SAAK,OAAO,CAAC,GAAG,KAAK,MAAMA,CAAE;AAAA,EAC/B;AACF;AAgBO,MAAME,IAAyB;AAAA,EACrC,MAAM;AAAA,EACN,aAAa;AAAA,EACb,aAAa;AAAA,EACb,SAAS;AAAA,EACT,UAAU;AAAA,EACV,OAAO;AAAA,EACP,UAAU;AAAA,EACV,SAAS;AAAA,EACT,kBAAkB;AAAA,EAClB,cAAc;AAAA,IAAC,SAAS,IAAIH,EAAa;AAAA,IAAE,UAAU,IAAIA,EAAa;AAAA,EACtE;AACD,GC/CaI,IAAW,CAACb,MACjB,OAAOA,KAAU,UAGZc,IAAoB,CAACd,MAC1Ba,EAASb,CAAK,KAAKA,MAAU,IAGxBe,IAAS,CAACf,MACfA,aAAiB,MAGZgB,IAAa,CAAChB,MACnBA,aAAiB,UAGZiB,KAAS,CAACC,MAAwB;AAC1C,MAAA;AACH,WAAO,KAAKA,CAAG;AAAA,UACF;AAEb,WAAO,OAAO,KAAKA,CAAG,EAAE,SAAS,QAAQ;AAAA,EAC1C;AACD,GAEaC,KAAiB,CAACC,MAA4C;AAC1E,QAAMC,IAAe,CAAA,GAEfC,IAAS,CAACC,GAAavB,MAAmB;AAC5C,IAAAqB,EAAA,KAAK,GAAG,mBAAmBE,CAAG,CAAC,IAAI,mBAAmB,OAAOvB,CAAK,CAAC,CAAC,EAAE;AAAA,EAAA,GAGpEwB,IAAa,CAACD,GAAavB,MAAmB;AAC/C,IAAuBA,KAAU,SAIjC,MAAM,QAAQA,CAAK,IACtBA,EAAM,QAAQ,CAAAyB,MAAKD,EAAWD,GAAKE,CAAC,CAAC,IAC3B,OAAOzB,KAAU,WAC3B,OAAO,QAAQA,CAAK,EAAE,QAAQ,CAAC,CAAC0B,GAAGD,CAAC,MAAMD,EAAW,GAAGD,CAAG,IAAIG,CAAC,KAAKD,CAAC,CAAC,IAEvEH,EAAOC,GAAKvB,CAAK;AAAA,EAClB;AAGD,gBAAO,QAAQoB,CAAM,EAAE,QAAQ,CAAC,CAACG,GAAKvB,CAAK,MAAMwB,EAAWD,GAAKvB,CAAK,CAAC,GAEhEqB,EAAG,SAAS,IAAIA,EAAG,KAAK,GAAG,CAAC,KAAK;AACzC,GAEMM,KAAS,CAACC,GAAuBC,MAAuC;AACvE,QAAAC,IAAUF,EAAO,eAAe,WAEhCG,IAAOF,EAAQ,IACnB,QAAQ,iBAAiBD,EAAO,OAAO,EACvC,QAAQ,YAAY,CAACI,GAAmBC,MAAkB;;AAC1D,YAAIC,IAAAL,EAAQ,SAAR,QAAAK,EAAc,eAAeD,KACzBH,EAAQ,OAAOD,EAAQ,KAAKI,CAAK,CAAC,CAAC,IAEpCD;AAAA,EAAA,CACP,GAEIG,IAAMP,EAAO,OAAOG;AAC1B,SAAOF,EAAQ,QAAQM,IAAMhB,GAAeU,EAAQ,KAAK,IAAIM;AAC9D,GAEaC,KAAc,CAACP,MAAqD;AAChF,MAAIA,EAAQ,UAAU;AACf,UAAAQ,IAAW,IAAI,YAEfC,IAAU,CAACf,GAAavB,MAAmB;AAChD,MAAIa,EAASb,CAAK,KAAKe,EAAOf,CAAK,IACzBqC,EAAA,OAAOd,GAAKvB,CAAK,IAE1BqC,EAAS,OAAOd,GAAK,KAAK,UAAUvB,CAAK,CAAC;AAAA,IAC3C;AAGM,kBAAA,QAAQ6B,EAAQ,QAAQ,EAC7B,OAAO,CAAC,CAAG,EAAA7B,CAAK,MAA6BA,KAAU,IAAI,EAC3D,QAAQ,CAAC,CAACuB,GAAKvB,CAAK,MAAM;AACtB,MAAA,MAAM,QAAQA,CAAK,IACtBA,EAAM,QAAQ,CAAAyB,MAAKa,EAAQf,GAAKE,CAAC,CAAC,IAElCa,EAAQf,GAAKvB,CAAK;AAAA,IACnB,CACA,GAEKqC;AAAA,EACR;AAED,GAIaxC,IAAU,OAAUgC,GAA4BU,MACxD,OAAOA,KAAa,aACfA,EAAyBV,CAAO,IAElCU,GAGKC,KAAa,OAAOZ,GAAuBC,MAAiD;AAClG,QAAA,CAACY,GAAOC,GAAUC,GAAUC,CAAiB,IAAI,MAAM,QAAQ,IAAI;AAAA,IACxE/C,EAAQgC,GAASD,EAAO,KAAK;AAAA,IAC7B/B,EAAQgC,GAASD,EAAO,QAAQ;AAAA,IAChC/B,EAAQgC,GAASD,EAAO,QAAQ;AAAA,IAChC/B,EAAQgC,GAASD,EAAO,OAAO;AAAA,EAAA,CAC/B,GAEKiB,IAAU,OAAO,QAAQ;AAAA,IAC9B,QAAQ;AAAA,IACR,GAAGD;AAAA,IACH,GAAGf,EAAQ;AAAA,EAAA,CACX,EACC,OAAO,CAAC,CAAA,EAAG7B,CAAK,MAA6BA,KAAU,IAAI,EAC3D,OAAO,CAAC6C,GAAS,CAACtB,GAAKvB,CAAK,OAAO;AAAA,IACnC,GAAG6C;AAAAA,IACH,CAACtB,CAAG,GAAG,OAAOvB,CAAK;AAAA,EAAA,IAChB,CAA4B,CAAA;AAMjC,MAJIc,EAAkB2B,CAAK,MAClBI,EAAA,gBAAmB,UAAUJ,CAAK,KAGvC3B,EAAkB4B,CAAQ,KAAK5B,EAAkB6B,CAAQ,GAAG;AAC/D,UAAMG,IAAc7B,GAAO,GAAGyB,CAAQ,IAAIC,CAAQ,EAAE;AAC5C,IAAAE,EAAA,gBAAmB,SAASC,CAAW;AAAA,EAChD;AAEI,SAAAjB,EAAQ,SAAS,WAChBA,EAAQ,YACHgB,EAAA,cAAc,IAAIhB,EAAQ,YACxBd,EAAOc,EAAQ,IAAI,IAC7BgB,EAAQ,cAAc,IAAIhB,EAAQ,KAAK,QAAQ,6BACrChB,EAASgB,EAAQ,IAAI,IAC/BgB,EAAQ,cAAc,IAAI,eACf7B,EAAWa,EAAQ,IAAI,MAClCgB,EAAQ,cAAc,IAAI,sBAIrB,IAAI,QAAQA,CAAO;AAC3B,GAEaE,KAAiB,CAAClB,MAAwC;;AAClE,MAAAA,EAAQ,SAAS;AAChB,YAAAK,IAAAL,EAAQ,cAAR,QAAAK,EAAmB,SAAS,wBAAuBc,IAAAnB,EAAQ,cAAR,QAAAmB,EAAmB,SAAS,WAC3E,KAAK,UAAUnB,EAAQ,IAAI,IACxBhB,EAASgB,EAAQ,IAAI,KAAKd,EAAOc,EAAQ,IAAI,KAAKb,EAAWa,EAAQ,IAAI,IAC5EA,EAAQ,OAER,KAAK,UAAUA,EAAQ,IAAI;AAIrC,GAEaoB,KAAc,OAC1BrB,GACAC,GACAM,GACAe,GACAb,GACAQ,GACA1C,MACuB;AACjB,QAAAgD,IAAa,IAAI;AAEvB,MAAI5D,IAAuB;AAAA,IAC1B,SAAAsD;AAAA,IACA,MAAMK,KAAQb;AAAA,IACd,QAAQR,EAAQ;AAAA,IAChB,QAAQsB,EAAW;AAAA,EAAA;AAGpB,EAAIvB,EAAO,qBACVrC,EAAQ,cAAcqC,EAAO;AAG9B,aAAWlB,KAAMkB,EAAO,aAAa,QAAQ;AAC5CrC,IAAAA,IAAU,MAAMmB,EAAGnB,CAAO;AAGlB,SAAAY,EAAA,MAAMgD,EAAW,MAAA,CAAO,GAE1B,MAAM,MAAMhB,GAAK5C,CAAO;AAChC,GAEa6D,KAAoB,CAAC5D,GAAoB6D,MAAgD;AACrG,MAAIA,GAAgB;AACnB,UAAMC,IAAU9D,EAAS,QAAQ,IAAI6D,CAAc;AAC/C,QAAAxC,EAASyC,CAAO;AACZ,aAAAA;AAAA,EAET;AAED,GAEaC,KAAkB,OAAO/D,MAAyC;AAC1E,MAAAA,EAAS,WAAW;AACnB,QAAA;AACH,YAAMgE,IAAchE,EAAS,QAAQ,IAAI,cAAc;AACvD,UAAIgE,GAAa;AAChB,cAAMC,IAAc,CAAC,4BAA4B,mBAAmB,mBAAmB,UAAU,UAAU,QAAQ;AACnH,YAAID,EAAY,SAAS,kBAAkB,KAAKA,EAAY,SAAS,OAAO;AACpE,iBAAA,MAAMhE,EAAS;AACvB,YAAWiE,EAAY,KAAK,CAAAC,MAAQF,EAAY,SAASE,CAAI,CAAC;AACtD,iBAAA,MAAMlE,EAAS;AACZ,YAAAgE,EAAY,SAAS,qBAAqB;AAC7C,iBAAA,MAAMhE,EAAS;AACZ,YAAAgE,EAAY,SAAS,OAAO;AAC/B,iBAAA,MAAMhE,EAAS;MAExB;AAAA,aACQgB,GAAO;AACf,cAAQ,MAAMA,CAAK;AAAA,IACpB;AAGF,GAEamD,KAAkB,CAAC9B,GAA4B+B,MAA4B;AA6CjF,QAAApD,IA5CiC;AAAA,IACtqB,EAAQ;AAAA,EAAA,EAGS+B,EAAO,MAAM;AAClC,MAAIpD;AACH,UAAM,IAAIlB,EAASuC,GAAS+B,GAAQpD,CAAK;AAGtC,MAAA,CAACoD,EAAO,IAAI;AACT,UAAAC,IAAcD,EAAO,UAAU,WAC/BE,IAAkBF,EAAO,cAAc,WACvCG,KAAa,MAAM;AACpB,UAAA;AACH,eAAO,KAAK,UAAUH,EAAO,MAAM,MAAM,CAAC;AAAA,cAC/B;AACJ;AAAA,MACR;AAAA,IAAA;AAGD,UAAM,IAAItE;AAAA,MAASuC;AAAA,MAAS+B;AAAA,MAC3B,0BAA0BC,CAAW,kBAAkBC,CAAe,WAAWC,CAAS;AAAA,IAAA;AAAA,EAE5F;AACD,GASaxE,IAAU,CAAIqC,GAAuBC,MAC1C,IAAIlC,GAAkB,OAAOE,GAASC,GAAQK,MAAa;AAC7D,MAAA;AACG,UAAAgC,IAAMR,GAAOC,GAAQC,CAAO,GAC5BQ,IAAWD,GAAYP,CAAO,GAC9BqB,IAAOH,GAAelB,CAAO,GAC7BgB,IAAU,MAAML,GAAWZ,GAAQC,CAAO;AAE5C,QAAA,CAAC1B,EAAS,aAAa;AACtB,UAAAX,IAAW,MAAMyD,GAAYrB,GAAQC,GAASM,GAAKe,GAAMb,GAAUQ,GAAS1C,CAAQ;AAExF,iBAAWO,KAAMkB,EAAO,aAAa,SAAS;AAClC,QAAApC,IAAA,MAAMkB,EAAGlB,CAAQ;AAGvB,YAAAwE,IAAe,MAAMT,GAAgB/D,CAAQ,GAC7C6D,IAAiBD,GAAkB5D,GAAUqC,EAAQ,cAAc,GAEnE+B,IAAoB;AAAA,QACzB,KAAAzB;AAAA,QACA,IAAI3C,EAAS;AAAA,QACb,QAAQA,EAAS;AAAA,QACjB,YAAYA,EAAS;AAAA,QACrB,MAAM6D,KAAkBW;AAAA,MAAA;AAGzB,MAAAL,GAAgB9B,GAAS+B,CAAM,GAE/B/D,EAAQ+D,EAAO,IAAI;AAAA,IACpB;AAAA,WACQpD,GAAO;AACf,IAAAV,EAAOU,CAAK;AAAA,EACb;AAAA,CACA;ACzUK,MAAMyD,EAAsB;AAAA;AAAA;AAAA;AAAA;AAAA,EAK/B,OAAc,UAAUC,IAA6E,IAAkG;AAC7L,UAAA,EAAE,UAAAC,EAAa,IAAAD;AACrB,WAAOE,EAAUxD,GAAS;AAAA,MAC9B,QAAQ;AAAA,MACR,KAAK;AAAA,MACL,OAAO;AAAA,QACH,UAAAuD;AAAA,MACJ;AAAA,IAAA,CACH;AAAA,EACG;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,OAAc,iBAAoH;AAC9H,WAAOC,EAAUxD,GAAS;AAAA,MAC9B,QAAQ;AAAA,MACR,KAAK;AAAA,IAAA,CACR;AAAA,EACG;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,OAAc,gBAAgBsD,IAAmF,IAAwG;AACrN,UAAM,EAAE,YAAAG,GAAY,UAAAC,GAAU,SAAAC,GAAS,WAAAC,MAAcN;AACrD,WAAOE,EAAUxD,GAAS;AAAA,MAC9B,QAAQ;AAAA,MACR,KAAK;AAAA,MACL,OAAO;AAAA,QACH,YAAAyD;AAAA,QACA,UAAAC;AAAA,QACA,SAAAC;AAAA,QACA,WAAAC;AAAA,MACJ;AAAA,IAAA,CACH;AAAA,EACG;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,OAAc,YAAYN,IAA+E,IAAoG;AACnM,UAAA,EAAE,UAAAC,EAAa,IAAAD;AACrB,WAAOE,EAAUxD,GAAS;AAAA,MAC9B,QAAQ;AAAA,MACR,KAAK;AAAA,MACL,OAAO;AAAA,QACH,UAAAuD;AAAA,MACJ;AAAA,IAAA,CACH;AAAA,EACG;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,OAAc,aAAaD,IAAiF,IAAsG;AACxM,UAAA,EAAE,UAAAC,GAAU,aAAAM,EAAgB,IAAAP;AAClC,WAAOE,EAAUxD,GAAS;AAAA,MAC9B,QAAQ;AAAA,MACR,KAAK;AAAA,MACL,OAAO;AAAA,QACH,UAAAuD;AAAA,MACJ;AAAA,MACA,MAAMM;AAAA,MACN,WAAW;AAAA,IAAA,CACd;AAAA,EACG;AAEJ;;ACtEO,MAAMC,GAAuE;AAAA,EAIlF,YAAYC,GAAyB;AAFrC,IAAAC,EAAA,MAAAC,GAAA;AAGE,IAAAC,EAAA,MAAKD,GAAQF;AAAA,EACf;AAAA,EAEA,MAAM,UAAUR,GAA0E;AACjF,WAAA,MAAMY,EAAoBC,EAAA,MAAKH,IAAOZ,EAAsB,UAAU,EAAE,UAAAE,EAAoB,CAAA,CAAC;AAAA,EACtG;AAAA,EAEA,MAAM,YAAYA,GAA0E;AACnF,WAAA,MAAMY,EAAoBC,EAAA,MAAKH,IAAOZ,EAAsB,YAAY,EAAE,UAAAE,EAAoB,CAAA,CAAC;AAAA,EACxG;AAAA,EAEA,MAAM,aAAaA,GAAkBc,GAAyF;AAC5H,WAAO,MAAMF,EAAoBC,EAAA,MAAKH,IAAOZ,EAAsB,aAAa;AAAA,MAC9E,UAAAE;AAAA,MACA,aAAac;AAAA,IACd,CAAA,CAAC;AAAA,EACJ;AAAA,EAEA,MAAM,gBAAgBT,GAA2BD,GAAiBF,GAAoBC,GAA8E;AAClK,WAAO,MAAMS,EAAoBC,EAAA,MAAKH,IAAOZ,EAAsB,gBAAgB,EAAE,WAAAO,GAAW,SAAAD,GAAS,YAAAF,GAAY,UAAAC,EAAS,CAAC,CAAC;AAAA,EAClI;AAAA,EAEA,MAAM,iBAAqE;AACzE,WAAO,MAAMS,EAAoBC,EAAA,MAAKH,IAAOZ,EAAsB,gBAAgB;AAAA,EACrF;AAEF;AA7BEY,IAAA;;ACZK,MAAMK,WAAiCC,EAAkB;AAAA,EAG9D,YAAYR,GAAyB;AACnC,UAAMA,CAAI;AAHZ,IAAAC,EAAA,MAAAQ,GAAA;AAIO,IAAAN,EAAA,MAAAM,GAA4B,IAAIV,GAAmC,IAAI;AAAA,EAC9E;AAAA,EAEA,MAAM,UAAUP,GAAkB;AAChC,WAAO,MAAMa,EAAA,MAAKI,GAA0B,UAAUjB,CAAQ;AAAA,EAChE;AAAA,EAEA,MAAM,YAAYA,GAAkB;AAClC,WAAO,MAAMa,EAAA,MAAKI,GAA0B,YAAYjB,CAAQ;AAAA,EAClE;AAAA,EAEA,MAAM,aAAaA,GAAkBc,GAAgD;AACnF,WAAO,MAAMD,EAAA,MAAKI,GAA0B,aAAajB,GAAUc,CAAsB;AAAA,EAC3F;AAAA,EAEA,MAAM,gBAAgBT,GAA2BD,GAAiBF,GAAoBC,GAAkB;AACtG,WAAO,MAAMU,EAAA,MAAKI,GAA0B,gBAAgBZ,GAAWD,GAASF,GAAYC,CAAQ;AAAA,EACtG;AAAA,EAEA,MAAM,iBAAiB;AACd,WAAA,MAAMU,EAAA,MAAKI,GAA0B;EAC9C;AACF;AA1BEA,IAAA;;ACCK,MAAMC,UAA8BF,EAAkB;AAAA,EAU3D,YAAYR,GAAyB;AACnC,UAAMA,CAAI;AATZ,IAAAC,EAAA,MAAAU,GAAA;AAEA,IAAAV,EAAA,MAAAW,GAAA;AAGA,IAAAX,EAAA,MAAAY,GAAA;AAHgB,IAAAV,EAAA,MAAAS,GAAA,IAAIE,EAAuD,MAAS,IACpE,KAAA,eAAeT,EAAA,MAAKO,GAAc,aAAa,GAEhDT,EAAA,MAAAU,GAAA,IAAIC,EAA+C,MAAS,IAC3D,KAAA,cAAcT,EAAA,MAAKQ,GAAa,aAAa,GAItDV,EAAA,MAAAQ,GAAc,IAAIJ,GAAyB,IAAI;AAAA,EACtD;AAAA,EAEA,MAAM,UAAUf,GAAkBuB,IAAuB,IAAM;AAC7D,UAAM,EAAE,MAAAxB,EAAK,IAAI,MAAMc,EAAA,MAAKM,GAAY,UAAUnB,CAAQ;AAC1D,QAAID;AACF,aAAKwB,KACG,MAAA,KAAK,aAAavB,GAAUD,CAAI,GAGjCA;AAAA,EAIX;AAAA,EAEA,MAAM,YAAYC,GAAkB;AAClC,UAAM,EAAE,MAAAD,EAAK,IAAI,MAAMc,EAAA,MAAKM,GAAY,YAAYnB,CAAQ;AAC5D,QAAID;AACK,aAAAA;AAAA,EAIX;AAAA,EAEA,MAAM,aAAaC,GAAkBc,GAAgD;AAE5E,WADO,MAAMD,EAAA,MAAKM,GAAY,aAAanB,GAAUc,CAAsB;AAAA,EAEpF;AAAA,EAEA,MAAM,gBAAgBT,GAA2BD,GAAiBF,GAAoBC,GAAkB;AAChG,UAAA,EAAE,MAAAJ,EAAK,IAAI,MAAMc,EAAA,MAAKM,GAAY,gBAAgBd,GAAWD,GAASF,GAAYC,CAAQ;AAChG,IAAIJ,KACGc,EAAA,MAAAO,GAAc,SAASrB,CAAI;AAAA,EAEpC;AAAA,EAEA,MAAM,iBAAiB;AACrB,UAAM,EAAE,MAAAA,EAAK,IAAI,MAAMc,EAAA,MAAKM,GAAY,eAAe;AACvD,IAAIpB,KACGc,EAAA,MAAAQ,GAAa,SAAStB,CAAI;AAAA,EAEnC;AAEF;AAtDEoB,IAAA,eAEAC,IAAA,eAGAC,IAAA;AAqDW,MAAAG,IACX,IAAIC,EAAuC,uBAAuB;;;;;;;;;;;AChEpE,MAAMC,KAAc;AAGb,IAAMC,IAAN,cAAyCC,EAAgBC,CAAU,EAAE;AAAA,EAArE,cAAA;AAAA,UAAA,GAAA,SAAA,GAGqC,KAAA,eAAA;AAAA,EAAA;AAAA,EAE1C,WAAWC,GAA4D;AACjE,WAAAA,KAAgB,OAAOA,KAAgB,MAClC,WAEAA,KAAgB,MAChB,YAEG;AAAA,EACd;AAAA,EAEA,SAAS;AACA,WAAAC;AAAA,sBACW,KAAK,WAAW,KAAK,YAAY,CAAC;AAAA,QAChD,KAAK,YAAY;AAAA;AAAA;AAAA,EAGvB;AACF;AAnBEC,EAAA;AAAA,EADCC,EAAS,EAAC,MAAM,QAAO;AAAA,GAFbN,EAGX,WAAA,gBAAA,CAAA;AAHWA,IAANK,EAAA;AAAA,EADNE,EAAcR,EAAW;AAAA,GACbC,CAAA;ACKA,MAAAQ,KAA8B,CAAC3B,GAAM4B,MAAsB;AAEtE,EAAAA,EAAkB,aAAa;AAAA,IAC7B,GAAGC;AAAAA,IACH,GAAGC;AAAAA,EAAA,CACJ,GAEI9B,EAAA,eAAe+B,GAAkB,OAAOC,MAAS;AACpD,QAAI,CAACA;AAAM;AAEL,UAAAC,IAAaD,EAAK;AACxB,IAAA/F,EAAQ,OAAOgG,EAAW,MAC1BhG,EAAQ,QAAQgG,EAAW,OAC3BhG,EAAQ,mBAAmBgG,EAAW,iBACtChG,EAAQ,cAAcgG,EAAW;AAAA,EAAA,CAClC,GAEDjC,EAAK,eAAegB,GAAwB,IAAIN,EAAsBV,CAAI,CAAC;AAC7E;"}