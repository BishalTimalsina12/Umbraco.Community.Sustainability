/* tslint:disable */
/* eslint-disable */
/**
 * Sustainability API
 * Umbraco.Community.Sustainability
 *
 * The version of the OpenAPI document: Latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  UmbracoSustainabilityApiV1SavePageDataPostRequest,
} from '../models/index';
import {
    UmbracoSustainabilityApiV1SavePageDataPostRequestFromJSON,
    UmbracoSustainabilityApiV1SavePageDataPostRequestToJSON,
} from '../models/index';

export interface UmbracoSustainabilityApiV1CheckPageGetRequest {
    pageId?: number;
}

export interface UmbracoSustainabilityApiV1GetPageDataGetRequest {
    pageId?: number;
}

export interface UmbracoSustainabilityApiV1SavePageDataPostOperationRequest {
    pageId?: number;
    umbracoSustainabilityApiV1SavePageDataPostRequest?: UmbracoSustainabilityApiV1SavePageDataPostRequest;
}

/**
 * 
 */
export class SustainabilityApi extends runtime.BaseAPI {

    /**
     */
    async umbracoSustainabilityApiV1CheckPageGetRaw(requestParameters: UmbracoSustainabilityApiV1CheckPageGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        if (requestParameters.pageId !== undefined) {
            queryParameters['pageId'] = requestParameters.pageId;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/umbraco/sustainability/api/v1/checkPage`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async umbracoSustainabilityApiV1CheckPageGet(requestParameters: UmbracoSustainabilityApiV1CheckPageGetRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.umbracoSustainabilityApiV1CheckPageGetRaw(requestParameters, initOverrides);
    }

    /**
     */
    async umbracoSustainabilityApiV1GetPageDataGetRaw(requestParameters: UmbracoSustainabilityApiV1GetPageDataGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<string>> {
        const queryParameters: any = {};

        if (requestParameters.pageId !== undefined) {
            queryParameters['pageId'] = requestParameters.pageId;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/umbraco/sustainability/api/v1/getPageData`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        if (this.isJsonMime(response.headers.get('content-type'))) {
            return new runtime.JSONApiResponse<string>(response);
        } else {
            return new runtime.TextApiResponse(response) as any;
        }
    }

    /**
     */
    async umbracoSustainabilityApiV1GetPageDataGet(requestParameters: UmbracoSustainabilityApiV1GetPageDataGetRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<string> {
        const response = await this.umbracoSustainabilityApiV1GetPageDataGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async umbracoSustainabilityApiV1SavePageDataPostRaw(requestParameters: UmbracoSustainabilityApiV1SavePageDataPostOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        if (requestParameters.pageId !== undefined) {
            queryParameters['pageId'] = requestParameters.pageId;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/umbraco/sustainability/api/v1/savePageData`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: UmbracoSustainabilityApiV1SavePageDataPostRequestToJSON(requestParameters.umbracoSustainabilityApiV1SavePageDataPostRequest),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async umbracoSustainabilityApiV1SavePageDataPost(requestParameters: UmbracoSustainabilityApiV1SavePageDataPostOperationRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.umbracoSustainabilityApiV1SavePageDataPostRaw(requestParameters, initOverrides);
    }

}
